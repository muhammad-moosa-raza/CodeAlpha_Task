import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

data = {
    'age': [25, 45, 35, 50, 23, 31, 29, 41, 62, 54],
    'income': [40000, 80000, 50000, 90000, 20000, 35000, 32000, 70000, 120000, 110000],
    'loan_amount': [10000, 20000, 12000, 25000, 5000, 10000, 8000, 15000, 30000, 22000],
    'credit_history': [1, 0, 1, 0, 1, 1, 1, 0, 0, 0],
    'creditworthy': [1, 0, 1, 0, 1, 1, 1, 0, 0, 0]  
}
df = pd.DataFrame(data)

X = df[['age', 'income', 'loan_amount', 'credit_history']]
y = df['creditworthy']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print("\nModel Accuracy:\n", accuracy)
print("\nConfusion Matrix:\n", conf_matrix)
print("\nClassification Report:\n", class_report)
